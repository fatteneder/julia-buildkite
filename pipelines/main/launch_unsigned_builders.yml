# This file launches all the build jobs that _don't_ require secrets access.
# These jobs can pass their output off to jobs that do require secrets access,
# but those privileged steps require signing before they can be run.
#
# Yes, this is creating another layer of indirection; the flow now looks like:
#
#   [webui] -> launch_unsigned_builders.yml -> misc/llvmpasses.yml
#
# when we could theoretically just have the `webui` launch `misc/llvmpasses.yml`,
# however this raises the bar for contributors to add new (unsigned) steps to
# our CI configuration, so I'd rather live with an extra layer of indirection
# and only need to touch the webui configuration when we need to alter
# something about the privileged steps.

common:
  - diff-filter-build_plugin: &diff-filter-build
      https://github.com/fatteneder/diff-filter-buildkite-plugin#main:
        name: "build"
        ignore:
          - "*.md"
          - "*.json"
          - "CITATION.*"
          - ".gitignore"
          - ".clangd"
          - ".mailmap"
        # TODO: Need this option because BUILDKITE_PULL_REQUEST_BRANCH=main
        # when running tests in Julia-CI/julia-buildkite,
        # but for PRs against Julia/JuliaLang BUILDKITE_PULL_REQUEST_BRANCH=master
        target_branch: "master"
  - pr-labels_plugin: &pr-labels
      sv-oss/github-pr-labels#v0.0.2:
        publish-env-var: PULL_REQUEST_LABELS

steps:
  - group: "Build"
    notify:
      - github_commit_status:
          context: "Build"
    steps:
      - label: "Launch build jobs"
        plugins:
          - JuliaCI/external-buildkite#v1:
              version: "./.buildkite-external-version"
              repo_url: "https://github.com/JuliaCI/julia-buildkite"
          - *diff-filter-build
          - *pr-labels
        commands: |
          # Launch Linux build jobs
          FORCE=$(test -n "$(echo $${PULL_REQUEST_LABELS} | grep "\\<ci-force-build\\>")" && echo 1 || echo 0)
          BUILD=$(($${BUILDKITE_PLUGIN_DIFF_FILTER_TRIGGERED_BUILD} || ${FORCE}))
          GROUP="Build" \
              ALLOW_FAIL="false" \
              BUILD="${BUILD}" \
              bash .buildkite/utilities/arches_pipeline_upload.sh \
              .buildkite/pipelines/main/platforms/build_linux.arches \
              .buildkite/pipelines/main/platforms/build_linux.yml
          # Launch macOS packaging jobs
          GROUP="Build" \
              ALLOW_FAIL="false" \
              BUILD="${BUILD}" \
              bash .buildkite/utilities/arches_pipeline_upload.sh \
              .buildkite/pipelines/main/platforms/build_macos.arches \
              .buildkite/pipelines/main/platforms/build_macos.yml
          GROUP="Build" \
              ALLOW_FAIL="false" \
              BUILD="${BUILD}" \
              bash .buildkite/utilities/arches_pipeline_upload.sh \
              .buildkite/pipelines/main/platforms/build_freebsd.arches \
              .buildkite/pipelines/main/platforms/build_freebsd.yml
          GROUP="Build" \
              ALLOW_FAIL="false" \
              BUILD="${BUILD}" \
              bash .buildkite/utilities/arches_pipeline_upload.sh \
              .buildkite/pipelines/main/platforms/build_windows.arches \
              .buildkite/pipelines/main/platforms/build_windows.yml
        agents:
          queue: "julia"
          os: "linux"
  - group: "Check"
    notify:
      - github_commit_status:
          context: "Check"
    steps:
      - label: "Launch check jobs"
        plugins:
          - JuliaCI/external-buildkite#v1:
              version: "./.buildkite-external-version"
              repo_url: "https://github.com/JuliaCI/julia-buildkite"
          - *diff-filter-build
          - *pr-labels
        commands: |
          buildkite-agent pipeline upload .buildkite/pipelines/main/misc/doctest.yml
          buildkite-agent pipeline upload .buildkite/pipelines/main/misc/pdf_docs/build_pdf_docs.yml
          FORCE=$(test -n "$(echo $${PULL_REQUEST_LABELS} | grep "\\<ci-force-build\\>")" && echo 1 || echo 0)
          BUILD=$(($${BUILDKITE_PLUGIN_DIFF_FILTER_TRIGGERED_BUILD} || ${FORCE}))
          if [[ ${BUILD} == 1 ]]; then
            buildkite-agent pipeline upload .buildkite/pipelines/main/misc/analyzegc.yml
            buildkite-agent pipeline upload .buildkite/pipelines/main/misc/embedding.yml
            buildkite-agent pipeline upload .buildkite/pipelines/main/misc/llvmpasses.yml
            # buildkite-agent pipeline upload .buildkite/pipelines/main/misc/whitespace.yml # Currently runs in GitHub Actions instead of Buildkite

            buildkite-agent pipeline upload .buildkite/pipelines/main/misc/sanitizers/asan.yml
            buildkite-agent pipeline upload .buildkite/pipelines/main/misc/sanitizers/tsan.yml
          fi
        agents:
          queue: "julia"
          os: "linux"
  - group: "Test"
    notify:
      - github_commit_status:
          context: "Test"
    steps:
      - label: "Launch test jobs"
        plugins:
          - JuliaCI/external-buildkite#v1:
              version: "./.buildkite-external-version"
              repo_url: "https://github.com/JuliaCI/julia-buildkite"
          - *diff-filter-build
          - *pr-labels
        commands: |
          export ALLOW_FAIL="false"
          FORCE=$(test -n "$(echo $${PULL_REQUEST_LABELS} | grep "\\<ci-force-build\\>")" && echo 1 || echo 0)
          BUILD=$(($${BUILDKITE_PLUGIN_DIFF_FILTER_TRIGGERED_BUILD} || ${FORCE}))
          if [[ ${BUILD} == 1 ]]; then
            buildkite-agent pipeline upload .buildkite/pipelines/main/misc/gcext.yml
            buildkite-agent pipeline upload .buildkite/pipelines/main/misc/test_revise.yml

            # Launch Linux test jobs
            GROUP="Test" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/main/platforms/test_linux.arches \
                .buildkite/pipelines/main/platforms/test_linux.yml
            # Launch i686-linux-gnu test jobs
            GROUP="Test" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/main/platforms/test_linux.i686.arches \
                .buildkite/pipelines/main/platforms/test_linux.i686.yml
            # Launch macOS test jobs
            GROUP="Test" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/main/platforms/test_macos.arches \
                .buildkite/pipelines/main/platforms/test_macos.yml
            # Launch FreeBSD test jobs
            GROUP="Test" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/main/platforms/test_freebsd.arches \
                .buildkite/pipelines/main/platforms/test_freebsd.yml
            # Launch windows test jobs
            GROUP="Test" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/main/platforms/test_windows.arches \
                .buildkite/pipelines/main/platforms/test_windows.yml
          fi
        agents:
          queue: "julia"
          os: "linux"
  - group: "Allow Fail"
    steps:
      - label: "Launch allowed-to-fail build jobs"
        plugins:
          - JuliaCI/external-buildkite#v1:
              version: "./.buildkite-external-version"
              repo_url: "https://github.com/JuliaCI/julia-buildkite"
          - *diff-filter-build
          - *pr-labels
        commands: |
          export ALLOW_FAIL="true"
          FORCE=$(test -n "$(echo $${PULL_REQUEST_LABELS} | grep "\\<ci-force-build\\>")" && echo 1 || echo 0)
          BUILD=$(($${BUILDKITE_PLUGIN_DIFF_FILTER_TRIGGERED_BUILD} || ${FORCE}))
          if [[ ${BUILD} == 1 ]]; then
            # Launch Linux allowed-to-fail build jobs
            GROUP="Allow Fail" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/main/platforms/build_linux.soft_fail.arches \
                .buildkite/pipelines/main/platforms/build_linux.yml
            # Launch macOS allowed-to-fail build jobs
            GROUP="Allow Fail" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/main/platforms/build_macos.soft_fail.arches \
                .buildkite/pipelines/main/platforms/build_macos.yml
          fi
        agents:
          queue: "julia"
          os: "linux"
      - label: "Launch allowed-to-fail test jobs"
        plugins:
          - JuliaCI/external-buildkite#v1:
              version: "./.buildkite-external-version"
              repo_url: "https://github.com/JuliaCI/julia-buildkite"
          - *diff-filter-build
          - *pr-labels
        commands: |
          export ALLOW_FAIL="true"
          FORCE=$(test -n "$(echo $${PULL_REQUEST_LABELS} | grep "\\<ci-force-build\\>")" && echo 1 || echo 0)
          BUILD=$(($${BUILDKITE_PLUGIN_DIFF_FILTER_TRIGGERED_BUILD} || ${FORCE}))
          if [[ ${BUILD} == 1 ]]; then
            # Launch Linux allowed-to-fail test jobs
            GROUP="Allow Fail" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/main/platforms/test_linux.soft_fail.arches \
                .buildkite/pipelines/main/platforms/test_linux.yml
            # Launch macOS allowed-to-fail test jobs
            GROUP="Allow Fail" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/main/platforms/test_macos.soft_fail.arches \
                .buildkite/pipelines/main/platforms/test_macos.yml
            # Launch FreeBSD allowed-to-fail jobs
            GROUP="Allow Fail" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/main/platforms/test_freebsd.soft_fail.arches \
                .buildkite/pipelines/main/platforms/test_freebsd.yml
            # Launch windows allowed-to-fail test jobs
            GROUP="Allow Fail" \
                bash .buildkite/utilities/arches_pipeline_upload.sh \
                .buildkite/pipelines/main/platforms/test_windows.soft_fail.arches \
                .buildkite/pipelines/main/platforms/test_windows.yml
          fi
        agents:
          queue: "julia"
          os: "linux"
